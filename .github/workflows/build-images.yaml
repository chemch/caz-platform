name: Build and Push to ECR

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      service_name:
        required: false
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      REPO_PAT:
        required: true

  workflow_dispatch:
    inputs:
      environment:
        description: Target environment (e.g. dev, qa, uat, prod)
        required: true
        type: string
      service_name:
        description: Optional service name to deploy
        required: false
        type: string

  repository_dispatch:
    types: [start-build]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || github.event.client_payload.environment }}
      SERVICE_NAME: ${{ github.event.inputs.service_name || github.event.client_payload.service_name }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Make All Scripts Runnable
        run: chmod +x ${{ github.workspace }}/scripts/*

      - name: Run ECR Build and Push Script
        run: ./scripts/build-push-all.sh "$ENVIRONMENT"

      - name: Trigger Deploy Workflow
        run: ./scripts/trigger-deploy.sh "$ENVIRONMENT" "$SERVICE_NAME"
        env:
          REPO_OWNER: ${{ github.repository_owner }}
          GH_TOKEN: ${{ secrets.REPO_PAT }}